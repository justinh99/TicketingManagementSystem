{"ast":null,"code":"var _jsxFileName = \"/Users/seung/Desktop/TMS/TicketingManagementSystem-UI/src/TicketList.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Ticket {\n  constructor() {\n    this.studentID = void 0;\n    this.studentName = void 0;\n    this.ticketType = void 0;\n    this.description = void 0;\n    this.location = void 0;\n    this.currentDate = void 0;\n    this.studentID = \"\";\n    this.studentName = \"\";\n    this.ticketType = \"\";\n    this.description = \"\";\n    this.location = \"\";\n    this.currentDate = new Date();\n  }\n}\nfunction calculateTimeDifference(givenDate) {\n  const currentDate = new Date();\n  const timeDifference = currentDate.getTime() - givenDate.getTime(); // Difference in milliseconds\n\n  const seconds = Math.floor(timeDifference / 1000); // Convert to seconds\n  const minutes = Math.floor(seconds / 60); // Convert to minutes\n  const hours = Math.floor(minutes / 60); // Convert to hours\n  const days = Math.floor(hours / 24); // Convert to days\n\n  return {\n    days,\n    hours: hours % 24,\n    minutes: minutes % 60,\n    seconds: seconds % 60\n  };\n}\nfunction formatDate(date) {\n  const day = date.getDate();\n  const month = date.getMonth() + 1; // Months are zero-indexed\n  const year = date.getFullYear();\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const seconds = date.getSeconds();\n  const currentDate = new Date();\n  const timeDifference = currentDate.getTime() - date.getTime(); // Difference in milliseconds\n  const Totalhours = Math.floor(timeDifference / 3600000); // Convert to seconds\n  const Totalminutes = Math.floor(timeDifference % 3600000 / 60000); // Convert to seconds\n  const Totalseconds = Math.floor(timeDifference % 60000 / 1000); // Convert to seconds\n\n  return `${month}/${day}/${year}`;\n}\nfunction formatTime(date) {\n  const currentDate = new Date();\n  const timeDifference = currentDate.getTime() - date.getTime(); // Difference in milliseconds\n  const Totalhours = Math.floor(timeDifference / 3600000); // Convert to seconds\n  const Totalminutes = Math.floor(timeDifference % 3600000 / 60000); // Convert to seconds\n  const Totalseconds = Math.floor(timeDifference % 60000 / 1000); // Convert to seconds\n\n  return `${Totalhours} Hours, ${Totalminutes} Minutes, ${Totalseconds} Seconds ago`;\n}\nconst TicketList = ({\n  tickets\n}) => {\n  const sortedTickets = [...tickets].sort((a, b) => a.currentDate.getTime() - b.currentDate.getTime());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ticket-form-container\",\n    children: sortedTickets.map((ticket, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticket\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [index + 1, \". \", ticket.studentName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Ticket Type: \", ticket.ticketType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", ticket.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Created Time: \", formatTime(ticket.currentDate)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ticket-buttons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, ticket.studentID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_c = TicketList;\nexport default TicketList;\nvar _c;\n$RefreshReg$(_c, \"TicketList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Ticket","constructor","studentID","studentName","ticketType","description","location","currentDate","Date","calculateTimeDifference","givenDate","timeDifference","getTime","seconds","Math","floor","minutes","hours","days","formatDate","date","day","getDate","month","getMonth","year","getFullYear","getHours","getMinutes","getSeconds","Totalhours","Totalminutes","Totalseconds","formatTime","TicketList","tickets","sortedTickets","sort","a","b","className","children","map","ticket","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/seung/Desktop/TMS/TicketingManagementSystem-UI/src/TicketList.tsx"],"sourcesContent":["import React from 'react';\n\nclass Ticket {\n    public studentID: string;\n    public studentName: string;\n    public ticketType: string;\n    public description: string;\n    public location: string;\n    public currentDate: Date;\n\n    constructor() {\n      this.studentID = \"\";\n      this.studentName = \"\";\n      this.ticketType =  \"\";\n      this.description = \"\";\n      this.location = \"\"\n      this.currentDate = new Date();\n    }\n}\n\ninterface TicketListProps {\n  tickets: Ticket[];\n}\n\nfunction calculateTimeDifference(givenDate: Date): { days: number; hours: number; minutes: number; seconds: number } {\n  const currentDate = new Date();\n  const timeDifference = currentDate.getTime() - givenDate.getTime(); // Difference in milliseconds\n\n  const seconds = Math.floor(timeDifference / 1000); // Convert to seconds\n  const minutes = Math.floor(seconds / 60); // Convert to minutes\n  const hours = Math.floor(minutes / 60); // Convert to hours\n  const days = Math.floor(hours / 24); // Convert to days\n\n  return { days, hours: hours % 24, minutes: minutes % 60, seconds: seconds % 60 };\n}\n\nfunction formatDate(date:Date) {\n  const day = date.getDate();\n  const month = date.getMonth() + 1; // Months are zero-indexed\n  const year = date.getFullYear();\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const seconds = date.getSeconds();\n  const currentDate = new Date();\n  const timeDifference = currentDate.getTime() - date.getTime(); // Difference in milliseconds\n  const Totalhours = Math.floor(timeDifference / 3600000); // Convert to seconds\n  const Totalminutes = Math.floor(timeDifference % 3600000 / 60000); // Convert to seconds\n  const Totalseconds = Math.floor(timeDifference %  60000/ 1000); // Convert to seconds\n\n  return `${month}/${day}/${year}`;\n}\n\nfunction formatTime(date:Date) {\n  const currentDate = new Date();\n  const timeDifference = currentDate.getTime() - date.getTime(); // Difference in milliseconds\n  const Totalhours = Math.floor(timeDifference / 3600000); // Convert to seconds\n  const Totalminutes = Math.floor(timeDifference % 3600000 / 60000); // Convert to seconds\n  const Totalseconds = Math.floor(timeDifference %  60000 / 1000); // Convert to seconds\n\n  return `${Totalhours} Hours, ${Totalminutes} Minutes, ${Totalseconds} Seconds ago`;\n}\n\nconst TicketList: React.FC<TicketListProps> = ({ tickets }) => {\n  const sortedTickets = [...tickets].sort((a, b) => a.currentDate.getTime() - b.currentDate.getTime());\n  return (\n    <div className=\"ticket-form-container\">\n        {sortedTickets.map((ticket, index) => (\n                <li key={ticket.studentID}>\n                <div className=\"ticket\">\n                    <strong>{index + 1}. {ticket.studentName}</strong>\n                    <p>Ticket Type: {ticket.ticketType}</p>\n                    <p>Location: {ticket.location}</p>\n                    <p>Created Time: {formatTime(ticket.currentDate)}</p>\n                    <div className=\"ticket-buttons\">\n                    </div>\n                </div>\n                </li>         \n        ))}\n    </div>\n  );\n};\n\nexport default TicketList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}