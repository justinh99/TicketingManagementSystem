{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/TMS/TicketingManagementSystem-UI/src/login.tsx\",\n  _s = $RefreshSig$();\n// Login.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from './AuthProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  // State to manage user input\n\n  const {\n    isAuthenticated,\n    setIsAuthenticated\n  } = useAuth();\n  class LoginStatus {\n    constructor(status, data, description, error) {\n      this.status = void 0;\n      this.data = void 0;\n      this.description = void 0;\n      this.error = void 0;\n      this.status = status;\n      this.data = data;\n      this.description = description;\n      this.error = error; // Include this line to set the error property\n    }\n  }\n\n  class LoginData {\n    constructor(loginStatus, token) {\n      this.loginStatus = void 0;\n      this.token = void 0;\n      this.loginStatus = loginStatus;\n      this.token = token;\n    }\n  }\n  const navigate = useNavigate();\n  const [loginStatus, setLoginStatus] = useState();\n  const [loginData, setLoginData] = useState({\n    username: '',\n    // Initialize with an empty string\n    password: '' // Initialize with an empty string\n  });\n\n  const {\n    username,\n    password\n  } = loginData;\n  const setLoginCookie = accessToken => {\n    const expirationDate = new Date();\n    expirationDate.setDate(expirationDate.getDate() + 7); // Cookie expiration in 7 days\n\n    document.cookie = `accessToken=${accessToken}; expires=${expirationDate.toUTCString()}; path=/`;\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    const login = 'http://localhost:8080/login';\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(loginData)\n    };\n\n    // Make the API request\n    fetch(login, requestOptions).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      // Handle the API response data here\n      const loginStatus = new LoginStatus(data.status, new LoginData(data.data.loginStatus, data.data.token), data.description, data.error);\n      setLoginStatus(loginStatus);\n      //document.cookie = `token=${data.token}; secure; samesite=strict`;\n      if (loginStatus.data.loginStatus === 'succeed') {\n        setLoginCookie(loginStatus.data.token);\n        setIsAuthenticated(true);\n        navigate('/staffHome'); // Redirect to StaffScreen\n      }\n    }).catch(error => {\n      // Handle any errors that occurred during the fetch.\n      console.error('Fetch error:', error);\n    });\n\n    // Add your login logic here\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        flex: '1'\n      },\n      onClick: () => navigate(\"/\"),\n      children: \"ME100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          style: {\n            width: '150px',\n            height: '10px'\n          },\n          value: username,\n          onChange: e => setLoginData({\n            ...loginData,\n            username: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          style: {\n            width: '160px',\n            height: '20px'\n          },\n          value: password,\n          onChange: e => setLoginData({\n            ...loginData,\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          margin: 10\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), loginStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: loginStatus.data.loginStatus === 'succeed' ? 'success-message' : 'error-message',\n      children: loginStatus.data.loginStatus === 'succeed' ? 'Login succeeded' : 'Login failed'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"r18HPd9sd1+vcyRyIdlFspacpdI=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","useAuth","jsxDEV","_jsxDEV","Login","_s","isAuthenticated","setIsAuthenticated","LoginStatus","constructor","status","data","description","error","LoginData","loginStatus","token","navigate","setLoginStatus","loginData","setLoginData","username","password","setLoginCookie","accessToken","expirationDate","Date","setDate","getDate","document","cookie","toUTCString","handleSubmit","e","preventDefault","login","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","ok","Error","json","catch","console","className","children","style","textAlign","flex","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","width","height","value","onChange","target","margin","_c","$RefreshReg$"],"sources":["/home/ec2-user/TMS/TicketingManagementSystem-UI/src/login.tsx"],"sourcesContent":["// Login.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from './AuthProvider';\n\nconst Login = () => {\n  // State to manage user input\n\n  const { isAuthenticated, setIsAuthenticated } = useAuth();\n  class LoginStatus {\n    public status: Number ;\n    public data: LoginData;\n    public description: string;\n    public error: Object ;\n\n    constructor(status: number, data: LoginData, description: string, error: any) {\n        this.status = status;\n        this.data = data;\n        this.description = description;\n        this.error = error; // Include this line to set the error property\n      }\n  }\n\n  class LoginData {\n    public loginStatus: String;\n    public token: String;\n\n    constructor(loginStatus: String, token: String) {\n      this.loginStatus = loginStatus;\n      this.token = token;\n    }\n  }\n\n\n\n  const navigate = useNavigate();\n\n  const [loginStatus, setLoginStatus] = useState<LoginStatus>();\n\n  const [loginData, setLoginData] = useState({\n    username: '', // Initialize with an empty string\n    password: '', // Initialize with an empty string\n  });\n\n  const { username, password } = loginData;\n\n  const setLoginCookie = (accessToken: String) => {\n    const expirationDate = new Date();\n    expirationDate.setDate(expirationDate.getDate() + 7); // Cookie expiration in 7 days\n  \n    document.cookie = `accessToken=${accessToken}; expires=${expirationDate.toUTCString()}; path=/`;\n  };\n\n  // Handle form submission\n  const handleSubmit = (e: { preventDefault: () => void; }) => {\n    e.preventDefault();\n    const login = 'http://localhost:8080/login';\n\n    const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(loginData), \n      };\n  \n  \n      // Make the API request\n    fetch(login, requestOptions)\n    .then((response) => {\n        if (!response.ok) {\n        throw new Error('Network response was not ok');\n        }\n        return response.json();\n    })\n    .then((data) => {\n        // Handle the API response data here\n        const loginStatus = new LoginStatus(\n        data.status,\n        new LoginData(data.data.loginStatus, data.data.token),\n        data.description,\n        data.error\n        );\n        setLoginStatus(loginStatus);\n        //document.cookie = `token=${data.token}; secure; samesite=strict`;\n        if (loginStatus.data.loginStatus === 'succeed') {\n            setLoginCookie(loginStatus.data.token);\n            setIsAuthenticated(true);\n            navigate('/staffHome'); // Redirect to StaffScreen\n        }\n    })\n    .catch((error) => {\n        // Handle any errors that occurred during the fetch.\n        console.error('Fetch error:', error);\n    });\n\n\n\n    // Add your login logic here\n  };\n\n\n\n  return (\n    <div className=\"login-container\">\n      <h1 style={{ textAlign: 'center', flex: '1' }} onClick = {() => navigate(\"/\")}>ME100</h1>\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"username\">Username:</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            style={{ width: '150px', height: '10px' }}\n            value={username}\n            onChange={(e) => setLoginData({ ...loginData, username: e.target.value })}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            style={{ width: '160px', height: '20px' }}\n            value={password}\n            onChange={(e) => setLoginData({ ...loginData, password: e.target.value })}\n          />\n        </div>\n        <button type=\"submit\" style = {{margin: 10}}>Login</button>\n      </form>\n\n      {loginStatus && (\n        <div className={loginStatus.data.loginStatus === 'succeed' ? 'success-message' : 'error-message'}>\n          {loginStatus.data.loginStatus === 'succeed' ? 'Login succeeded' : 'Login failed'}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB;;EAEA,MAAM;IAAEC,eAAe;IAAEC;EAAmB,CAAC,GAAGN,OAAO,CAAC,CAAC;EACzD,MAAMO,WAAW,CAAC;IAMhBC,WAAWA,CAACC,MAAc,EAAEC,IAAe,EAAEC,WAAmB,EAAEC,KAAU,EAAE;MAAA,KALvEH,MAAM;MAAA,KACNC,IAAI;MAAA,KACJC,WAAW;MAAA,KACXC,KAAK;MAGR,IAAI,CAACH,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACC,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACC,WAAW,GAAGA,WAAW;MAC9B,IAAI,CAACC,KAAK,GAAGA,KAAK,CAAC,CAAC;IACtB;EACJ;;EAEA,MAAMC,SAAS,CAAC;IAIdL,WAAWA,CAACM,WAAmB,EAAEC,KAAa,EAAE;MAAA,KAHzCD,WAAW;MAAA,KACXC,KAAK;MAGV,IAAI,CAACD,WAAW,GAAGA,WAAW;MAC9B,IAAI,CAACC,KAAK,GAAGA,KAAK;IACpB;EACF;EAIA,MAAMC,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACe,WAAW,EAAEG,cAAc,CAAC,GAAGnB,QAAQ,CAAc,CAAC;EAE7D,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC;IACzCsB,QAAQ,EAAE,EAAE;IAAE;IACdC,QAAQ,EAAE,EAAE,CAAE;EAChB,CAAC,CAAC;;EAEF,MAAM;IAAED,QAAQ;IAAEC;EAAS,CAAC,GAAGH,SAAS;EAExC,MAAMI,cAAc,GAAIC,WAAmB,IAAK;IAC9C,MAAMC,cAAc,GAAG,IAAIC,IAAI,CAAC,CAAC;IACjCD,cAAc,CAACE,OAAO,CAACF,cAAc,CAACG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;IAEtDC,QAAQ,CAACC,MAAM,GAAI,eAAcN,WAAY,aAAYC,cAAc,CAACM,WAAW,CAAC,CAAE,UAAS;EACjG,CAAC;;EAED;EACA,MAAMC,YAAY,GAAIC,CAAkC,IAAK;IAC3DA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,KAAK,GAAG,6BAA6B;IAE3C,MAAMC,cAAc,GAAG;MACnBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACtB,SAAS;IAChC,CAAC;;IAGD;IACFuB,KAAK,CAACP,KAAK,EAAEC,cAAc,CAAC,CAC3BO,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAClB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAC9C;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAAEhC,IAAI,IAAK;MACZ;MACA,MAAMI,WAAW,GAAG,IAAIP,WAAW,CACnCG,IAAI,CAACD,MAAM,EACX,IAAII,SAAS,CAACH,IAAI,CAACA,IAAI,CAACI,WAAW,EAAEJ,IAAI,CAACA,IAAI,CAACK,KAAK,CAAC,EACrDL,IAAI,CAACC,WAAW,EAChBD,IAAI,CAACE,KACL,CAAC;MACDK,cAAc,CAACH,WAAW,CAAC;MAC3B;MACA,IAAIA,WAAW,CAACJ,IAAI,CAACI,WAAW,KAAK,SAAS,EAAE;QAC5CQ,cAAc,CAACR,WAAW,CAACJ,IAAI,CAACK,KAAK,CAAC;QACtCT,kBAAkB,CAAC,IAAI,CAAC;QACxBU,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;MAC5B;IACJ,CAAC,CAAC,CACD+B,KAAK,CAAEnC,KAAK,IAAK;MACd;MACAoC,OAAO,CAACpC,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACxC,CAAC,CAAC;;IAIF;EACF,CAAC;;EAID,oBACEV,OAAA;IAAK+C,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BhD,OAAA;MAAIiD,KAAK,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEC,IAAI,EAAE;MAAI,CAAE;MAACC,OAAO,EAAIA,CAAA,KAAMtC,QAAQ,CAAC,GAAG,CAAE;MAAAkC,QAAA,EAAC;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzFxD,OAAA;MAAAgD,QAAA,EAAI;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdxD,OAAA;MAAMyD,QAAQ,EAAE5B,YAAa;MAAAmB,QAAA,gBAC3BhD,OAAA;QAAAgD,QAAA,gBACEhD,OAAA;UAAO0D,OAAO,EAAC,UAAU;UAAAV,QAAA,EAAC;QAAS;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3CxD,OAAA;UACE2D,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,UAAU;UACbX,KAAK,EAAE;YAAEY,KAAK,EAAE,OAAO;YAAEC,MAAM,EAAE;UAAO,CAAE;UAC1CC,KAAK,EAAE7C,QAAS;UAChB8C,QAAQ,EAAGlC,CAAC,IAAKb,YAAY,CAAC;YAAE,GAAGD,SAAS;YAAEE,QAAQ,EAAEY,CAAC,CAACmC,MAAM,CAACF;UAAM,CAAC;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNxD,OAAA;QAAAgD,QAAA,gBACEhD,OAAA;UAAO0D,OAAO,EAAC,UAAU;UAAAV,QAAA,EAAC;QAAS;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3CxD,OAAA;UACE2D,IAAI,EAAC,UAAU;UACfC,EAAE,EAAC,UAAU;UACbX,KAAK,EAAE;YAAEY,KAAK,EAAE,OAAO;YAAEC,MAAM,EAAE;UAAO,CAAE;UAC1CC,KAAK,EAAE5C,QAAS;UAChB6C,QAAQ,EAAGlC,CAAC,IAAKb,YAAY,CAAC;YAAE,GAAGD,SAAS;YAAEG,QAAQ,EAAEW,CAAC,CAACmC,MAAM,CAACF;UAAM,CAAC;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNxD,OAAA;QAAQ2D,IAAI,EAAC,QAAQ;QAACV,KAAK,EAAI;UAACiB,MAAM,EAAE;QAAE,CAAE;QAAAlB,QAAA,EAAC;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,EAEN5C,WAAW,iBACVZ,OAAA;MAAK+C,SAAS,EAAEnC,WAAW,CAACJ,IAAI,CAACI,WAAW,KAAK,SAAS,GAAG,iBAAiB,GAAG,eAAgB;MAAAoC,QAAA,EAC9FpC,WAAW,CAACJ,IAAI,CAACI,WAAW,KAAK,SAAS,GAAG,iBAAiB,GAAG;IAAc;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtD,EAAA,CArIID,KAAK;EAAA,QAGuCH,OAAO,EA2BtCD,WAAW;AAAA;AAAAsE,EAAA,GA9BxBlE,KAAK;AAuIX,eAAeA,KAAK;AAAC,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}