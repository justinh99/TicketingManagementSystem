{"ast":null,"code":"import _slicedToArray from \"/Users/seung/Desktop/TicketingProject/TicketingManagementSystem-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/seung/Desktop/TicketingProject/TicketingManagementSystem-UI/src/AuthProvider.tsx\";\nimport React from 'react';\nimport { createContext, useContext, useState } from 'react';\nvar AuthContext = createContext(undefined);\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isAuthenticated = _useState2[0],\n    setIsAuthenticated = _useState2[1];\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      isAuthenticated: isAuthenticated,\n      setIsAuthenticated: setIsAuthenticated\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport var useAuth = function useAuth() {\n  var context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["React","createContext","useContext","useState","AuthContext","undefined","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","isAuthenticated","setIsAuthenticated","createElement","Provider","value","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","useAuth","context","Error"],"sources":["/Users/seung/Desktop/TicketingProject/TicketingManagementSystem-UI/src/AuthProvider.tsx"],"sourcesContent":["import React from 'react';\nimport { createContext, useContext, useState, ReactNode } from 'react';\n\ninterface AuthContextProps {\n  isAuthenticated: boolean;\n  setIsAuthenticated: (value: boolean) => void;\n}\n\nconst AuthContext = createContext<AuthContextProps | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, setIsAuthenticated }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAmB,OAAO;AAOtE,IAAMC,WAAW,GAAGH,aAAa,CAA+BI,SAAS,CAAC;AAE1E,OAAO,IAAMC,YAA+C,GAAG,SAAlDA,YAA+CA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAAA,IAAAC,SAAA,GAC1BN,QAAQ,CAAC,KAAK,CAAC;IAAAO,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtDG,eAAe,GAAAF,UAAA;IAAEG,kBAAkB,GAAAH,UAAA;EAE1C,oBACEV,KAAA,CAAAc,aAAA,CAACV,WAAW,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEJ,eAAe,EAAfA,eAAe;MAAEC,kBAAkB,EAAlBA;IAAmB,CAAE;IAAAI,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAClEf,QACmB,CAAC;AAE3B,CAAC;AAED,OAAO,IAAMgB,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EAC3B,IAAMC,OAAO,GAAGvB,UAAU,CAACE,WAAW,CAAC;EACvC,IAAIqB,OAAO,KAAKpB,SAAS,EAAE;IACzB,MAAM,IAAIqB,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC"},"metadata":{},"sourceType":"module"}