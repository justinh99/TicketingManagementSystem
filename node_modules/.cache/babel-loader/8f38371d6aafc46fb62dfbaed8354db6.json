{"ast":null,"code":"import _classCallCheck from \"/Users/seung/Desktop/project/typescript-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _this = this,\n  _jsxFileName = \"/Users/seung/Desktop/project/typescript-tutorial/src/TicketList.tsx\";\nimport React from 'react';\nvar Ticket = function Ticket() {\n  _classCallCheck(this, Ticket);\n  this.studentID = void 0;\n  this.studentName = void 0;\n  this.ticketType = void 0;\n  this.description = void 0;\n  this.location = void 0;\n  this.currentDate = void 0;\n  this.studentID = \"\";\n  this.studentName = \"\";\n  this.ticketType = \"\";\n  this.description = \"\";\n  this.location = \"\";\n  this.currentDate = new Date();\n};\nfunction calculateTimeDifference(givenDate) {\n  var currentDate = new Date();\n  var timeDifference = currentDate.getTime() - givenDate.getTime(); // Difference in milliseconds\n\n  var seconds = Math.floor(timeDifference / 1000); // Convert to seconds\n  var minutes = Math.floor(seconds / 60); // Convert to minutes\n  var hours = Math.floor(minutes / 60); // Convert to hours\n  var days = Math.floor(hours / 24); // Convert to days\n\n  return {\n    days: days,\n    hours: hours % 24,\n    minutes: minutes % 60,\n    seconds: seconds % 60\n  };\n}\nfunction formatDate(date) {\n  var day = date.getDate();\n  var month = date.getMonth() + 1; // Months are zero-indexed\n  var year = date.getFullYear();\n  var hours = date.getHours();\n  var minutes = date.getMinutes();\n  var seconds = date.getSeconds();\n  var currentDate = new Date();\n  var timeDifference = currentDate.getTime() - date.getTime(); // Difference in milliseconds\n  var Totalhours = Math.floor(timeDifference / 3600000); // Convert to seconds\n  var Totalminutes = Math.floor(timeDifference % 3600000 / 60000); // Convert to seconds\n  var Totalseconds = Math.floor(timeDifference % 60000 / 1000); // Convert to seconds\n\n  return \"\".concat(day, \"/\").concat(month, \"/\").concat(year);\n}\nfunction formatTime(date) {\n  var currentDate = new Date();\n  var timeDifference = currentDate.getTime() - date.getTime(); // Difference in milliseconds\n  var Totalhours = Math.floor(timeDifference / 3600000); // Convert to seconds\n  var Totalminutes = Math.floor(timeDifference % 3600000 / 60000); // Convert to seconds\n  var Totalseconds = Math.floor(timeDifference % 60000 / 1000); // Convert to seconds\n\n  return \"Created \".concat(Totalhours, \" Hours, \").concat(Totalminutes, \" Minutes, \").concat(Totalseconds, \" Seconds ago\");\n}\nvar TicketList = function TicketList(_ref) {\n  var tickets = _ref.tickets;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ticket-form-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, tickets.map(function (ticket) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: ticket.studentID,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ticket\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \"Student Name: \", ticket.studentName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, \"Description: \", ticket.description), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"Create Date: \", formatDate(ticket.currentDate)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, \"Create Hour: \", formatTime(ticket.currentDate)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ticket-buttons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    })));\n  })));\n};\nexport default TicketList;","map":{"version":3,"names":["React","Ticket","_classCallCheck","studentID","studentName","ticketType","description","location","currentDate","Date","calculateTimeDifference","givenDate","timeDifference","getTime","seconds","Math","floor","minutes","hours","days","formatDate","date","day","getDate","month","getMonth","year","getFullYear","getHours","getMinutes","getSeconds","Totalhours","Totalminutes","Totalseconds","concat","formatTime","TicketList","_ref","tickets","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","ticket","key"],"sources":["/Users/seung/Desktop/project/typescript-tutorial/src/TicketList.tsx"],"sourcesContent":["import React from 'react';\n\nclass Ticket {\n    public studentID: string;\n    public studentName: string;\n    public ticketType: string;\n    public description: string;\n    public location: string;\n    public currentDate: Date;\n\n    constructor() {\n      this.studentID = \"\";\n      this.studentName = \"\";\n      this.ticketType =  \"\";\n      this.description = \"\";\n      this.location = \"\"\n      this.currentDate = new Date();\n    }\n}\n\ninterface TicketListProps {\n  tickets: Ticket[];\n}\n\nfunction calculateTimeDifference(givenDate: Date): { days: number; hours: number; minutes: number; seconds: number } {\n  const currentDate = new Date();\n  const timeDifference = currentDate.getTime() - givenDate.getTime(); // Difference in milliseconds\n\n  const seconds = Math.floor(timeDifference / 1000); // Convert to seconds\n  const minutes = Math.floor(seconds / 60); // Convert to minutes\n  const hours = Math.floor(minutes / 60); // Convert to hours\n  const days = Math.floor(hours / 24); // Convert to days\n\n  return { days, hours: hours % 24, minutes: minutes % 60, seconds: seconds % 60 };\n}\n\nfunction formatDate(date:Date) {\n  const day = date.getDate();\n  const month = date.getMonth() + 1; // Months are zero-indexed\n  const year = date.getFullYear();\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const seconds = date.getSeconds();\n  const currentDate = new Date();\n  const timeDifference = currentDate.getTime() - date.getTime(); // Difference in milliseconds\n  const Totalhours = Math.floor(timeDifference / 3600000); // Convert to seconds\n  const Totalminutes = Math.floor(timeDifference % 3600000 / 60000); // Convert to seconds\n  const Totalseconds = Math.floor(timeDifference %  60000/ 1000); // Convert to seconds\n\n  return `${day}/${month}/${year}`;\n}\n\nfunction formatTime(date:Date) {\n  const currentDate = new Date();\n  const timeDifference = currentDate.getTime() - date.getTime(); // Difference in milliseconds\n  const Totalhours = Math.floor(timeDifference / 3600000); // Convert to seconds\n  const Totalminutes = Math.floor(timeDifference % 3600000 / 60000); // Convert to seconds\n  const Totalseconds = Math.floor(timeDifference %  60000 / 1000); // Convert to seconds\n\n  return `Created ${Totalhours} Hours, ${Totalminutes} Minutes, ${Totalseconds} Seconds ago`;\n}\n\nconst TicketList: React.FC<TicketListProps> = ({ tickets }) => {\n  return (\n    <div className=\"ticket-form-container\">\n      <ul>\n        {tickets.map((ticket) => (\n                <li key={ticket.studentID}>\n                <div className=\"ticket\">\n                    <strong>Student Name: {ticket.studentName}</strong>\n                    <p>Description: {ticket.description}</p>\n                    <p>Create Date: {formatDate(ticket.currentDate)}</p>\n                    <p>Create Hour: {formatTime(ticket.currentDate)}</p>\n                    <div className=\"ticket-buttons\">\n                    </div>\n                </div>\n                </li>         \n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TicketList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}