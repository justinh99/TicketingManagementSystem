{"ast":null,"code":"import _slicedToArray from \"/Users/seung/Desktop/project/typescript-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/seung/Desktop/project/typescript-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _this = this,\n  _jsxFileName = \"/Users/seung/Desktop/project/typescript-tutorial/src/StaffAssignedTickets.tsx\";\n// src/components/TicketForm.tsx\nimport React, { useEffect, useState } from 'react';\nimport './App.css'; // Import the CSS file for styling\nimport StaffTicketList from './StaffOpenTicketList';\nvar StaffAssignedTickets = function StaffAssignedTickets() {\n  // Define the Ticket interface\n  var Ticket = function Ticket() {\n    _classCallCheck(this, Ticket);\n    this.studentID = void 0;\n    this.studentName = void 0;\n    this.ticketType = void 0;\n    this.description = void 0;\n    this.location = void 0;\n    this.currentDate = void 0;\n  };\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tickets = _useState2[0],\n    setTickets = _useState2[1];\n  var handleInputChange = function handleInputChange(e) {\n    var _e$target = e.target,\n      name = _e$target.name,\n      value = _e$target.value;\n  };\n  useEffect(function () {\n    // Inside this useEffect, you can make the API request\n    // using the fetch API.\n    var getAllTickets = 'http://localhost:8080/ticket/getAllAssignedTickets'; // Replace with your API URL\n\n    // Define the options for the fetch request, including method, headers, and body.\n    var requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    // Make the API request\n    fetch(getAllTickets).then(function (response) {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(function (data) {\n      // Handle the API response data here\n      var ticketObjects = data.map(function (item) {\n        var ticket = new Ticket();\n        ticket.studentID = item.studentID;\n        ticket.studentName = item.studentName;\n        ticket.ticketType = item.ticketType;\n        ticket.description = item.description;\n        ticket.location = item.location;\n        ticket.currentDate = new Date(item.currentDate);\n        return ticket;\n      });\n      setTickets(ticketObjects);\n    }).catch(function (error) {\n      // Handle any errors that occurred during the fetch.\n      console.error('Fetch error:', error);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(StaffTicketList, {\n    tickets: tickets,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  });\n};\nexport default StaffAssignedTickets;","map":{"version":3,"names":["React","useEffect","useState","StaffTicketList","StaffAssignedTickets","Ticket","_classCallCheck","studentID","studentName","ticketType","description","location","currentDate","_useState","_useState2","_slicedToArray","tickets","setTickets","handleInputChange","e","_e$target","target","name","value","getAllTickets","requestOptions","method","headers","fetch","then","response","ok","Error","json","data","ticketObjects","map","item","ticket","Date","catch","error","console","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/seung/Desktop/project/typescript-tutorial/src/StaffAssignedTickets.tsx"],"sourcesContent":["// src/components/TicketForm.tsx\nimport React, { useEffect, useState } from 'react';\nimport './App.css'; // Import the CSS file for styling\nimport StaffTicketList from './StaffOpenTicketList';\n\n\nconst StaffAssignedTickets: React.FC = () => {\n\n    // Define the Ticket interface\nclass Ticket {\n    public studentID: string | undefined;\n    public studentName: string | undefined;\n    public ticketType: string | undefined;\n    public description: string | undefined;\n    public location: string | undefined;\n    public currentDate: Date | undefined;\n  }\n\n  const [tickets, setTickets] = useState<Ticket[]>([]);\n\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n\n  \n  }\n\n  useEffect(() => {\n    // Inside this useEffect, you can make the API request\n    // using the fetch API.\n    const getAllTickets = 'http://localhost:8080/ticket/getAllAssignedTickets'; // Replace with your API URL\n\n\n    // Define the options for the fetch request, including method, headers, and body.\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n\n    // Make the API request\n    fetch(getAllTickets)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        // Handle the API response data here\n        const ticketObjects = data.map((item: { studentID: string; studentName: string; ticketType: string; description: string; location: string; currentDate: string | number | Date; }) => {\n            const ticket = new Ticket();\n            ticket.studentID = item.studentID;\n            ticket.studentName = item.studentName;\n            ticket.ticketType = item.ticketType;\n            ticket.description = item.description;\n            ticket.location = item.location;\n            ticket.currentDate = new Date(item.currentDate);\n            return ticket;\n          });\n          setTickets(ticketObjects);\n      })\n      .catch((error) => {\n        // Handle any errors that occurred during the fetch.\n        console.error('Fetch error:', error);\n      });\n  }, []);\n\n  return (\n    <StaffTicketList tickets = {tickets}/>\n  );\n};\n\nexport default StaffAssignedTickets;\n"],"mappings":";;;;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW,CAAC,CAAC;AACpB,OAAOC,eAAe,MAAM,uBAAuB;AAGnD,IAAMC,oBAA8B,GAAG,SAAjCA,oBAA8BA,CAAA,EAAS;EAEzC;EAAA,IACEC,MAAM,YAAAA,OAAA;IAAAC,eAAA,OAAAD,MAAA;IAAA,KACDE,SAAS;IAAA,KACTC,WAAW;IAAA,KACXC,UAAU;IAAA,KACVC,WAAW;IAAA,KACXC,QAAQ;IAAA,KACRC,WAAW;EAAA;EAAA,IAAAC,SAAA,GAGUX,QAAQ,CAAW,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAG1B,IAAMI,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,CAA4D,EAAK;IAAA,IAAAC,SAAA,GAClED,CAAC,CAACE,MAAM;MAAxBC,IAAI,GAAAF,SAAA,CAAJE,IAAI;MAAEC,KAAK,GAAAH,SAAA,CAALG,KAAK;EAGrB,CAAC;EAEDtB,SAAS,CAAC,YAAM;IACd;IACA;IACA,IAAMuB,aAAa,GAAG,oDAAoD,CAAC,CAAC;;IAG5E;IACA,IAAMC,cAAc,GAAG;MACrBC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;;IAGD;IACAC,KAAK,CAACJ,aAAa,CAAC,CACjBK,IAAI,CAAC,UAACC,QAAQ,EAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAC,UAACK,IAAI,EAAK;MACd;MACA,IAAMC,aAAa,GAAGD,IAAI,CAACE,GAAG,CAAC,UAACC,IAAiJ,EAAK;QAClL,IAAMC,MAAM,GAAG,IAAIjC,MAAM,CAAC,CAAC;QAC3BiC,MAAM,CAAC/B,SAAS,GAAG8B,IAAI,CAAC9B,SAAS;QACjC+B,MAAM,CAAC9B,WAAW,GAAG6B,IAAI,CAAC7B,WAAW;QACrC8B,MAAM,CAAC7B,UAAU,GAAG4B,IAAI,CAAC5B,UAAU;QACnC6B,MAAM,CAAC5B,WAAW,GAAG2B,IAAI,CAAC3B,WAAW;QACrC4B,MAAM,CAAC3B,QAAQ,GAAG0B,IAAI,CAAC1B,QAAQ;QAC/B2B,MAAM,CAAC1B,WAAW,GAAG,IAAI2B,IAAI,CAACF,IAAI,CAACzB,WAAW,CAAC;QAC/C,OAAO0B,MAAM;MACf,CAAC,CAAC;MACFrB,UAAU,CAACkB,aAAa,CAAC;IAC7B,CAAC,CAAC,CACDK,KAAK,CAAC,UAACC,KAAK,EAAK;MAChB;MACAC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEzC,KAAA,CAAA2C,aAAA,CAACxC,eAAe;IAACa,OAAO,EAAIA,OAAQ;IAAA4B,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAAC;AAE1C,CAAC;AAED,eAAe9C,oBAAoB"},"metadata":{},"sourceType":"module"}